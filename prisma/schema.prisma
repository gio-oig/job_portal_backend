// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model UserAccount {
  id            Int            @id @default(autoincrement())
  created_at    DateTime       @default(now())
  email         String         @unique
  role          Role           @default(USER)
  password      String
  SeekerProfile SeekerProfile?
  // Token         Token?
  Company       Company[]

  @@map(name: "user_accounts")
}

model SeekerProfile {
  id              Int               @id @default(autoincrement())
  first_name      String
  last_name       String
  user_account    UserAccount       @relation(fields: [user_account_id], references: [id])
  user_account_id Int               @unique
  CompanyFollower CompanyFollower[]

  @@map("seeker_profiles")
}

model Company {
  id                  Int               @id @default(autoincrement())
  company_name        String
  company_description String            @db.Text
  avatar              String
  avatar_id           String
  user_account_id     Int
  user_account        UserAccount       @relation(fields: [user_account_id], references: [id])
  Job                 Job[]
  CompanyImage        CompanyImage[]
  CompanyFollower     CompanyFollower[]

  @@map("companies")
}

model CompanyFollower {
  company_id Int
  seeker_id  Int
  CompanyId  Company       @relation(fields: [company_id], references: [id])
  SeekerId   SeekerProfile @relation(fields: [seeker_id], references: [id])

  @@id([company_id, seeker_id])
  @@map("company_followers")
}

model CompanyImage {
  id            Int     @id @default(autoincrement())
  company_image String
  company_id    Int
  company       Company @relation(fields: [company_id], references: [id])

  @@map("company_images")
}

model Job {
  id              Int         @id @default(autoincrement())
  title           String
  description     String      @db.Text
  created_at      DateTime    @default(now())
  expiration_date DateTime
  creator_id      Int
  location_id     Int
  category_id     Int
  schedule_id     Int         @unique
  creator         Company     @relation(fields: [creator_id], references: [id])
  location        JobLocation @relation(fields: [location_id], references: [id])
  category        Category    @relation(fields: [category_id], references: [id])
  schedule        JobSchedule @relation(fields: [schedule_id], references: [id])

  tags tag[]
  @@map("jobs")
}

model JobLocation {
  id   Int    @id @default(autoincrement())
  city String
  Job  Job[]

  @@map("job_locations")
}

model Category {
  id   Int    @id @default(autoincrement())
  name String
  Job  Job[]

  @@map("categories")
}

model JobSchedule {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)
  Job  Job?

  @@map("job_scedules")
}

model tag {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)
  Job  Job[]

  @@map("tags")
}

// model Token {
//   id         Int         @id @default(autoincrement())
//   created_at DateTime    @default(now())
//   token      String
//   user_id    Int
//   user       UserAccount @relation(fields: [user_id], references: [id])

//   @@map("tokens")
// }

enum Role {
  USER
  HR
  ADMIN
}
